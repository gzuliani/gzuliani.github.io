import curses
import time

TIMER_COLOR = 1
SET_COLOR = 2
SCORE_COLOR = 3

TIMER_ROW = 3
TIMER_COL = 30

HOME_SET_ROW = 15
HOME_SET_COL = 6

HOME_SCORE_ROW = 15
HOME_SCORE_COL = 12

HOME_SET_ROW = 15
HOME_SET_COL = 6

GUEST_SCORE_ROW = 15
GUEST_SCORE_COL = 42

GUEST_SET_ROW = 15
GUEST_SET_COL = 72

def make_display(stdscr, y, x, code, color):
    attr = curses.color_pair(color) | curses.A_BOLD
    stdscr.addstr(y,     x + 1, '--' if code & 0x01 else '  ', attr)
    stdscr.addstr(y + 1, x + 3, '|'  if code & 0x02 else ' ',  attr)
    stdscr.addstr(y + 3, x + 3, '|'  if code & 0x04 else ' ',  attr)
    stdscr.addstr(y + 4, x + 1, '--' if code & 0x08 else '  ', attr)
    stdscr.addstr(y + 3, x    , '|'  if code & 0x10 else ' ',  attr)
    stdscr.addstr(y + 1, x    , '|'  if code & 0x20 else ' ',  attr)
    stdscr.addstr(y + 2, x + 1, '--' if code & 0x40 else '  ', attr)

configurations = [
    #~ # the configuration captured in the first picture taken
    #~ [0x6f, 0x06, 0x6f, 0x6f, 0x00, 0x3f, 0x3f, 0x3f, 0x06, 0x6f, 0x6f, 0x6f],

    # first configuration ever loaded on the actual scoreboard
    [0x5b, 0x00, 0x00, 0x4f, 0x66, 0x6d, 0x3f, 0x07, 0x00, 0x00, 0x6f, 0x3f],

    #~ # flashing "GOAL"
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x3d, 0x3f, 0x77, 0x38, 0x00, 0x00, 0x00, 0x00],

    #~ # scrolling "JOLLY HANDBALL"
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0x38, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x1e, 0x3f, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x3f, 0x38, 0x38, 0x6e, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x38, 0x6e, 0x00, 0x76, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x6e, 0x00, 0x76, 0x77, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x76, 0x77, 0x37, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x76, 0x77, 0x37, 0x1f, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x77, 0x37, 0x1f, 0x7f, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x37, 0x1f, 0x7f, 0x77, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x1f, 0x7f, 0x77, 0x38, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x7f, 0x77, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x77, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x38, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],
    #~ [0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00],

]

def main(stdscr):

    curses.curs_set(0)
    curses.init_pair(TIMER_COLOR, curses.COLOR_RED, curses.COLOR_BLACK)
    curses.init_pair(SET_COLOR, curses.COLOR_YELLOW, curses.COLOR_BLACK)
    curses.init_pair(SCORE_COLOR, curses.COLOR_GREEN, curses.COLOR_BLACK)

    for _ in range(10):
        for c in configurations:
            stdscr.clear()
            make_display(stdscr, HOME_SET_ROW, HOME_SET_COL, c[0], SET_COLOR)

            make_display(stdscr, HOME_SCORE_ROW, HOME_SCORE_COL +  6, c[1], SCORE_COLOR)
            make_display(stdscr, HOME_SCORE_ROW, HOME_SCORE_COL + 12, c[2], SCORE_COLOR)
            make_display(stdscr, HOME_SCORE_ROW, HOME_SCORE_COL + 18, c[3], SCORE_COLOR)

            make_display(stdscr, TIMER_ROW, TIMER_COL     , c[4], TIMER_COLOR)
            make_display(stdscr, TIMER_ROW, TIMER_COL +  6, c[5], TIMER_COLOR)
            make_display(stdscr, TIMER_ROW, TIMER_COL + 12, c[6], TIMER_COLOR)
            make_display(stdscr, TIMER_ROW, TIMER_COL + 18, c[7], TIMER_COLOR)

            make_display(stdscr, GUEST_SCORE_ROW, GUEST_SCORE_COL +  6, c[8], SCORE_COLOR)
            make_display(stdscr, GUEST_SCORE_ROW, GUEST_SCORE_COL + 12, c[9], SCORE_COLOR)
            make_display(stdscr, GUEST_SCORE_ROW, GUEST_SCORE_COL + 18, c[10], SCORE_COLOR)

            make_display(stdscr, GUEST_SET_ROW, GUEST_SET_COL, c[11], SET_COLOR)

            stdscr.refresh()
            time.sleep(.2)

    curses.curs_set(1)


curses.wrapper(main)
