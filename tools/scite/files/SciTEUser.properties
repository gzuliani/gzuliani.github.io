# c++ project directories
project.path.base=C:\Users\gianfranco\Documents\Lavori\Cyberqual\mm3\xray3
project.path.include=$(project.path.base)\include;$(project.path.base)\src\app
project.path.src=$(project.path.base)\src

# custom scripts support
innosetup.home=$(ProgramFiles)\Inno Setup 5
innosetup="$(innosetup.home)\iscc.exe"
markdown.rendering.command=1121
markdown.rendering.dir=$(SciteUserHome)\.md
markdown.rendering.file=$(markdown.rendering.dir)\$(FileName).html
python.home=C:\Python26
python=$(python.home)\pythonw.exe
python.scripts.dir=$(python.home)\Scripts

properties.directory.enable=1

# window position
position.left=540
position.top=0
position.width=740
position.height=770

# put output pane below the editing pane
split.vertical=0

# let output pane scroll and remain at the bottom after execution
output.scroll=2

# clear output pane before a tool is executed
clear.before.execute=1

# show toolbar and statusbar at startup
toolbar.visible=1
statusbar.visible=1

# show line numbers
line.margin.visible=1
line.margin.width=3+
margin.width=
fold.margin.width=0

# draw an edge at column 80
edge.column=80
edge.mode=1

# load some lua extensions
ext.lua.startup.script=$(SciteUserHome)/.scite/lua/SciTEStartup.lua
extension.$(file.patterns.cpp)=$(SciteUserHome)/.scite/lua/snippets-cpp.lua
extension.$(file.patterns.html)=$(SciteUserHome)/.scite/lua/snippets-html.lua

# buffer behaviour
load.on.activate=1
are.you.sure.on.reload=1
reload.preserves.undo=1
check.if.already.open=1
title.show.buffers=1

buffers=100

# api specs
api.*.c=$(SciteUserHome)/.scite/api/c.api
api.*.cpp=$(SciteUserHome)/.scite/api/cpp.api

# tabs
tabsize=4
indent.size=4
use.tabs.$(file.patterns.py)=0
use.tabs.$(file.patterns.lua)=0
indent.automatic=0
tab.indents=1
backspace.unindents=1

# enable word wrapping, and show a marker at the border
wrap.style=1
wrap.visual.flags=1
wrap.visual.flags.location=1

# home/end keys move the cursor to the begin/end of the current row
wrap.aware.home.end.keys=1

# use a flattened tree control with square headers
fold.symbols=3

# find in files
find.command=findstr /n /s /r /c:"$(find.what)" "$(find.directory)\$(find.files)"
find.files=*.*|*.cpp|*.h|*.xml

# enable search/replace by style
find.replace.advanced=1

# enable end-of-line autodetection
eol.auto=1

# enable word autocompletion
autocompleteword.automatic=1

# close xml tags automatically
xml.auto.close.tags=1

# quoting for text files
comment.block.=>

# fonts
font.base=$(font.monospace)
font.small=$(font.monospace)
font.comment=$(font.monospace)
font.code.comment.box=$(font.comment)
font.code.comment.line=$(font.comment)
font.code.comment.doc=$(font.comment)
font.code.comment.nested=$(font.comment)
font.text=$(font.monospace)
font.text.comment=$(font.monospace)
font.embedded.base=$(font.monospace)
font.embedded.comment=$(font.monospace)
#~ font.monospace=font:Courier New,size:11
#~ font.monospace=font:DejaVu Sans Mono,size:9
font.monospace=font:Consolas,size:11
#~ font.monospace=font:Lucida Console,size:10
font.vbs=$(font.monospace)

# render text through the Direct2D API
technology=0

# Alt+Up/Down move selection up and down
user.shortcuts=Alt+Up|2620|Alt+Down|2621|

# current word hilighting
highlight.current.word=0
highlight.current.word.by.style=0
indicators.under=1
indicators.alpha=128

error.inline=0

menu.language=\
Text|txt|$(keyText)|\
&Batch|bat||\
&C / C++|c||\
CMake|cmake||\
C&#|cs||\
CSS|css||\
&Difference|diff||\
H&ypertext|html|$(keyHTML)|\
&InnoSetup|iss||\
&Java|java||\
Java&Script|js||\
Lu&a|lua||\
&Makefile|mak|$(keyMake)|\
Markdown|md||\
&Properties|properties||\
Pytho&n|py||\
Reso&urce|rc||\
S&QL|sql||\
&VB|vb||\
VBScr&ipt|vbs||\
&XML|xml|$(keyXML)|

# load custom colors
import SciTETheme.twilight
#~ import SciTETheme.vibrantink
#~ import SciTETheme.zenburn

if USE_CUSTOM_COLOURS
	style.*.32=$(font.base),$(style.normal)
	style.*.33=$(font.base),$(style.linenr)
	style.*.34=$(style.matchparen)
	style.*.35=$(style.unmatchparen)
	style.*.36=
	style.*.37=$(style.folded)
	style.*.38=$(style.calltips)

#
# file specific settings
#

# cpp
filter.cpp=C/C++ (c cc cpp cxx cs h hh hxx hpp ipp dlg rc rc2 mak)|\
$(file.patterns.cpp);$(file.patterns.cs);$(file.patterns.rc);\
$(file.patterns.def);*.mak;make*|
lexer.$(file.patterns.def)=cpp
lexer.cpp.track.preprocessor=0
openpath.$(file.patterns.cpp)=$(project.path.include);
keywords2.$(file.patterns.cpp)=abort abs acos asctime asin assert atan atan2 atexit atof atoi atol \
bsearch calloc ceil clearerr clock cos cosh ctime difftime div exit exp \
fabs fclose feof ferror fflush fgetc fgetpos fgets floor fmod fopen fprintf fputc fputs \
fread free freopen frexp fscanf fseek fsetpos ftell fwrite getc getchar getenv gets gmtime \
isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit \
labs ldexp ldiv localtime log log10 longjmp malloc memchr memcmp memcpy memmove memset mktime modf \
perror pow printf putc putchar putenv puts qsort raise rand realloc remove rename rewind \
scanf setbuf setjmp setlocale setvbuf signal sin sinh sprintf sqrt srand sscanf strcat strchr \
strcmp strcoll strcpy strcspn strerror strftime strlen strncat strncmp strncpy strpbrk strrchr \
strspn strstr strtod strtok strtol strtoul strxfrm system tan tanh time tmpfile tmpnam tolower toupper \
ungetc va_arg va_end va_start vfprintf vprintf vsprintf vfscanf vscanf vsscanf 
command.compile.*.cpp=
command.build.*.cpp=cmd /c "$(project.path.base)\build\scite-build.cmd $(FilePath)"

# innosetup
import C:\Program Files\SciTE\inno
command.build.$(file.patterns.inno)=$(innosetup) "$(FilePath)"

# makefile
file.patterns.make=makefile;Makefile;*.mak;configure;*.mk

# markdown
comment.block.markdown=>
file.patterns.markdown=*.md;*.markdown
indent.maintain.$(file.patterns.markdown)=1
lexer.$(file.patterns.markdown)=markdown
use.tabs.$(file.patterns.markdown)=0
filter.markdown=Markdown (md markdown)|$(file.patterns.markdown)|
command.build.subsystem.$(file.patterns.markdown)=2
command.build.$(file.patterns.markdown)="$(markdown.rendering.file)"
command.name.21.$(file.patterns.markdown)=
command.save.before.21.$(file.patterns.markdown)=2
command.21.$(file.patterns.markdown)=$(python.scripts.dir)\markdown_py.bat -x extra -x del_ins -x meta -x sane_lists -x smartypants -x toc -x wikilinks -x xhtml_wrap(title="",css_url="md.css",js_url="") -f "$(markdown.rendering.file)" "$(FilePath)"
user.shortcuts=Ctrl+3|1121|

# python
indent.python.colon=1
command.go.*.py=$(python) -u "$(FileNameExt)"
command.go.*.pyw=$(python) -u "$(FileNameExt)"

# xml-friendly formats
file.patterns.xlf=*.xlf;*.xliff
lexer.$(file.patterns.xlf)=xml
file.patterns.tmx=*.tmx
lexer.$(file.patterns.tmx)=xml
command.go.subsystem.$(file.patterns.xml)=2
command.go.$(file.patterns.xml)="$(FilePath)"
command.go.subsystem.$(file.patterns.xlf)=2
command.go.$(file.patterns.xlf)="$(FilePath)"
command.go.subsystem.$(file.patterns.tmx)=2
command.go.$(file.patterns.tmx)="$(FilePath)"

#
# tools
#

# remove empty lines
command.subsystem.0.*=3
command.name.0.*=Remove Empty Lines
command.0.*=RemoveEmptyLines
command.save.before.0.*=2
# wrapping
command.subsystem.1.*=3
command.name.1.*=Wrap Text
command.1.*=WrapAllText
command.save.before.1.*=2
command.subsystem.2.*=3
command.name.2.*=Unwrap Text
command.2.*=UnwrapAllText
command.save.before.2.*=2
# ctags support
ctags.home=C:\Program Files\ctags
ctags.exe.path="$(ctags.home)\ctags.exe"
ctags.exe.options=--extra=+q -R -f$(tags.data.path) --excmd=pattern
readtags.exe.path="$(ctags.home)\readtags.exe"
tags.data.path="$(SciteUserHome)\_scite.tags"
command.subsystem.2.$(file.patterns.cpp)=0
command.name.2.$(file.patterns.cpp)=Find Tag
command.2.$(file.patterns.cpp)=cmd /c "$(readtags.exe.path) -e -t$(tags.data.path) $(CurrentWord)"
command.subsystem.3.$(file.patterns.cpp)=0
command.name.3.$(file.patterns.cpp)=Build Tags
command.3.$(file.patterns.cpp)=cmd /c "$(ctags.exe.path) $(ctags.exe.options) $(project.path.src)&&$(ctags.exe.path) -a $(ctags.exe.options) $(project.path.include)"
# astyle
astyle.exe.path="$(ProgramFiles)\Astyle\bin\AStyle.exe"
astyle.exe.options="$(SciteUserHome)\_astylerc"
command.name.4.$(file.patterns.cpp)=Apply Style
command.4.$(file.patterns.cpp)=$(astyle.exe.path) --suffix=none --options=$(astyle.exe.options) --preserve-date "$(FilePath)"
command.is.filter.4.$(file.patterns.cpp)=1
command.save.before.4.$(file.patterns.cpp)=1
# htmltidy support for xml
tidy.exe.path="$(ProgramFiles)\htmltidy\tidy.exe"
tidy.file.patterns=$(file.patterns.xml);$(file.patterns.xlf);$(file.patterns.tmx)
command.name.3.$(tidy.file.patterns)=Indent
command.3.$(tidy.file.patterns)=$(tidy.exe.path) -modify -indent -wrap -quiet -xml -utf16le "$(FilePath)"
command.is.filter.3.$(tidy.file.patterns)=1
command.save.before.3.$(tidy.file.patterns)=1
command.name.4.$(tidy.file.patterns)=Validate
command.4.$(tidy.file.patterns)=$(tidy.exe.path) -errors -quiet -xml "$(FilePath)"
command.save.before.4.$(tidy.file.patterns)=1
# htmltidy support for html
command.name.3.$(file.patterns.html)=Indent
command.3.$(file.patterns.html)=$(tidy.exe.path) -modify -indent -wrap -quiet --output-html yes --indent auto --tidy-mark no "$(FilePath)"
command.is.filter.3.$(file.patterns.html)=1
command.save.before.3.$(file.patterns.html)=1
command.name.4.$(file.patterns.html)=Validate
command.4.$(file.patterns.html)=$(tidy.exe.path) -errors -quiet "$(FilePath)"
command.save.before.4.$(file.patterns.html)=1
command.name.5.$(file.patterns.html)=Convert to XHTML
command.5.$(file.patterns.html)=$(tidy.exe.path) -modify -quiet -asxhtml --tidy-mark no "$(FilePath)"
command.is.filter.5.$(file.patterns.html)=1
command.save.before.5.$(file.patterns.html)=1
# snippets
command.name.7.*=Insert Snippet
command.7.*=dostring modules.scite.snippets.insert()
command.mode.7.*=subsystem:lua,savebefore:no
command.name.8.*=Cancel Snippet
command.8.*=dostring modules.scite.snippets.cancel_current()
command.mode.8.*=subsystem:lua,savebefore:no
command.name.9.*=List Snippets
command.9.*=dostring modules.scite.snippets.list()
command.mode.9.*=subsystem:lua,savebefore:no
# ansi to hex
command.subsystem.20.$(file.patterns.cpp)=3
command.name.20.$(file.patterns.cpp)=Hexify Selection
command.20.$(file.patterns.cpp)=AnsiToHexSelection
command.save.before.20.$(file.patterns.cpp)=2
#~ # ansi to hex c-string
#~ command.subsystem.21.$(file.patterns.cpp)=3
#~ command.name.21.$(file.patterns.cpp)=C-Stringize Selection
#~ command.21.$(file.patterns.cpp)=AnsiToCHexStringSelection
#~ command.save.before.21.$(file.patterns.cpp)=2
# hex to ansi
command.subsystem.22.$(file.patterns.cpp)=3
command.name.22.$(file.patterns.cpp)=Ansify Hex Selection
command.22.$(file.patterns.cpp)=HexToAnsiSelection
command.save.before.22.$(file.patterns.cpp)=2
# escape xml predefined entities - xml
command.subsystem.20.$(file.patterns.xml)=3
command.name.20.$(file.patterns.xml)=Escape Selection
command.20.$(file.patterns.xml)=XmlEscapeSelection
command.save.before.20.$(file.patterns.xml)=2
# unescape xml predefined entities - xml
command.subsystem.21.$(file.patterns.xml)=3
command.name.21.$(file.patterns.xml)=Unescape Selection
command.21.$(file.patterns.xml)=XmlUnescapeSelection
command.save.before.21.$(file.patterns.xml)=2
# escape xml predefined entities - html
command.subsystem.20.$(file.patterns.html)=3
command.name.20.$(file.patterns.html)=Escape Selection
command.20.$(file.patterns.html)=XmlEscapeSelection
command.save.before.20.$(file.patterns.html)=2
# unescape xml predefined entities - html
command.subsystem.21.$(file.patterns.html)=3
command.name.21.$(file.patterns.html)=Unescape Selection
command.21.$(file.patterns.html)=XmlUnescapeSelection
command.save.before.21.$(file.patterns.html)=2

#
# styles
#

if USE_CUSTOM_COLOURS

	# output pane
	style.errorlist.32=
	style.errorlist.0=
	style.errorlist.1=$(style.errorlist)
	style.errorlist.2=$(style.errorlist)
	style.errorlist.3=$(style.errorlist)
	style.errorlist.4=$(style.statement)
	style.errorlist.5=$(style.errorlist)
	style.errorlist.6=$(style.errorlist)
	style.errorlist.7=$(style.errorlist)
	style.errorlist.8=$(style.errorlist)
	style.errorlist.9=$(style.errorlist)
	style.errorlist.10=$(style.diffchange)
	style.errorlist.11=$(style.diffadd)
	style.errorlist.12=$(style.diffdelete)
	style.errorlist.13=$(style.difftext)
	style.errorlist.14=$(style.errorlist)
	style.errorlist.15=$(style.errorlist)
	style.errorlist.16=$(style.errorlist)
	style.errorlist.17=$(style.errorlist)
	style.errorlist.18=$(style.errorlist)
	style.errorlist.19=$(style.errorlist)
	style.errorlist.20=$(style.errorlist)
	style.errorlist.21=$(style.errorlist)
	style.errorlist.22=$(style.includepath)

	style.diff.0=
	style.diff.1=$(style.comment)
	style.diff.2=$(style.statement)
	style.diff.3=$(style.directory)
	style.diff.4=$(style.difftext)
	style.diff.5=$(style.diffdelete)
	style.diff.6=$(style.diffadd)
	style.diff.7=$(style.diffchange)

	# inline errors
	style.error.0=$(style.defaultmsg)
	style.error.1=$(style.warningmsg)
	style.error.2=$(style.errormsg)
	style.error.3=$(style.fatalmsg)

	# bash
	style.bash.0=
	style.bash.1=$(colour.error)
	style.bash.2=$(style.comment)
	style.bash.3=$(style.number)
	style.bash.4=$(style.keyword)
	style.bash.5=$(style.string)
	style.bash.6=$(style.char)
	style.bash.7=$(style.operator)
	style.bash.8=$(style.identifier)
	style.bash.9=$(style.variable)
	style.bash.10=$(style.variable),bold
	style.bash.11=$(style.command)
	style.bash.12=$(style.preproc)
	style.bash.13=$(style.preproc)
	braces.bash.style=7

	# batch
	style.batch.0=
	style.batch.1=$(style.comment)
	style.batch.2=$(style.keyword)
	style.batch.3=$(style.label),eolfilled
	style.batch.4=$(style.number)
	style.batch.5=$(style.command)
	style.batch.6=$(style.variable)
	style.batch.7=$(style.operator)

	# conf
	style.conf.0=
	style.conf.1=$(style.comment)
	style.conf.2=$(style.number)
	style.conf.3=$(style.tag)
	style.conf.4=$(style.operator)
	style.conf.5=$(style.attribute)
	style.conf.6=$(style.string)
	style.conf.7=$(style.operator)
	style.conf.8=$(style.keyword)
	style.conf.9=$(style.tag)

	# cpp
	# ---------------------------------------------
	# keyword  -> SCE_C_WORD                   = 5
	# keyword2 -> SCE_C_WORD2                  = 16
	# keyword3 -> SCE_C_COMMENTDOCKEYWORD      = 17
	# keyword4 -> SCE_C_GLOBALCLASS            = 19

	style.cpp.0=
	style.cpp.1=$(style.comment)
	style.cpp.2=$(style.comment)
	style.cpp.3=$(style.comment)
	style.cpp.4=$(style.number)
	style.cpp.5=$(style.keyword)
	style.cpp.6=$(style.string)
	style.cpp.7=$(style.character)
	style.cpp.8=$(style.boolean)
	style.cpp.9=$(style.preproc)
	style.cpp.10=$(style.operator)
	style.cpp.11=$(style.default)
	style.cpp.12=eolfilled
	style.cpp.13=eolfilled
	style.cpp.14=
	style.cpp.15=$(style.comment)
	style.cpp.16=$(style.special)
	style.cpp.17=$(style.specialcomment)
	style.cpp.18=$(style.specialcomment)
	style.cpp.19=
	style.cpp.20=$(style.string)
	style.cpp.21=$(style.string)
	style.cpp.22=$(style.string)
	style.cpp.23=$(style.comment)

	# css
	style.css.32=
	style.css.0=$(style.delimiter)
	style.css.1=$(style.statement)
	style.css.2=$(style.special)
	style.css.3=$(style.special)
	style.css.4=$(style.errormsg)
	style.css.5=$(style.operator)
	style.css.6=$(style.identifier)
	style.css.7=$(style.errormsg)
	style.css.8=$(style.string)
	style.css.9=$(style.comment)
	style.css.10=$(style.number)
	style.css.11=
	style.css.12=$(style.preproc)
	style.css.13=$(style.string)
	style.css.14=$(style.string)
	style.css.15=$(style.identifier)
	style.css.16=$(style.normal)

	# html
	style.hypertext.0=
	style.hypertext.1=$(style.tag)
	style.hypertext.2=$(style.tag)
	style.hypertext.3=$(style.attribute)
	style.hypertext.4=$(style.attribute)
	style.hypertext.5=$(style.number)
	style.hypertext.6=$(style.string)
	style.hypertext.7=$(style.string)
	style.hypertext.8=
	style.hypertext.9=$(style.comment)
	style.hypertext.10=$(style.float)
	style.hypertext.11=$(style.tag)
	style.hypertext.12=$(style.comment)
	style.hypertext.13=$(style.comment)
	style.hypertext.14=$(style.folded)
	style.hypertext.16=$(style.folded)
	style.hypertext.17=$(style.float),eolfilled
	style.hypertext.18=
	style.hypertext.19=$(style.number)
	style.hypertext.20=$(style.comment)
	style.hypertext.21=$(style.float)
	style.hypertext.22=$(style.float)
	style.hypertext.23=$(style.float)
	style.hypertext.24=$(style.float)
	style.hypertext.25=$(style.float)
	style.hypertext.26=$(style.float)
	style.hypertext.27=$(style.float)
	style.hypertext.28=$(style.float)
	style.hypertext.29=$(style.float)
	style.hypertext.31=$(style.float)
	style.hypertext.34=
	style.hypertext.35=

	# inno setup
	style.inno.0=
	style.inno.1=$(style.comment)
	style.inno.2=$(style.label)
	style.inno.3=$(style.identifier)
	style.inno.4=$(style.section),bold
	style.inno.5=$(style.preproc)
	style.inno.6=$(style.preproc)
	style.inno.7=$(style.comment)
	style.inno.8=$(style.keyword)
	style.inno.9=$(style.keyword)
	style.inno.10=$(style.string)
	style.inno.11=$(style.string)

	# lua
	style.lua.32=
	style.lua.0=
	style.lua.1=$(style.comment)
	style.lua.2=$(style.comment)
	style.lua.3=
	style.lua.4=$(style.number)
	style.lua.5=$(style.keyword)
	style.lua.6=$(style.string)
	style.lua.7=$(style.character)
	style.lua.8=$(style.string)
	style.lua.9=$(style.preproc)
	style.lua.10=$(style.operator)
	style.lua.11=$(style.identifier)
	style.lua.12=eolfilled
	style.lua.13=$(style.float)
	style.lua.14=$(style.float)
	style.lua.15=$(style.float)
	style.lua.16=$(style.float)
	style.lua.17=$(style.float)
	style.lua.18=$(style.float)
	style.lua.19=$(style.float)
	style.lua.20=$(style.label)

	# makefile
	style.makefile.0=$(style.normal)
	style.makefile.1=$(style.comment)
	style.makefile.2=$(style.preproc)
	style.makefile.3=$(style.variable)
	style.makefile.4=$(style.operator)
	style.makefile.5=$(style.target)
	style.makefile.9=$(style.error),eolfilled
	style.makefile.34=
	style.makefile.35=

	# properties
	style.props.1=$(style.comment)
	style.props.2=$(style.section)
	style.props.3=$(style.operator)
	style.props.4=
	style.props.5=$(style.identifier)
	style.props.34=
	style.props.35=

	# python
	style.python.0=
	style.python.1=$(style.comment)
	style.python.2=$(style.number)
	style.python.3=$(style.string)
	style.python.4=$(style.string)
	style.python.5=$(style.keyword)
	style.python.6=$(style.string)
	style.python.7=$(style.string)
	style.python.8=$(style.identifier)
	style.python.9=$(style.function)
	style.python.10=$(style.operator)
	style.python.11=
	style.python.12=$(style.comment)
	style.python.13=eolfilled
	style.python.14=$(style.keyword)
	style.python.15=$(style.float)
	style.python.34=
	style.python.35=

	# sql
	style.sql.0=
	style.sql.1=$(style.comment)
	style.sql.2=$(style.comment)
	style.sql.3=$(style.comment)
	style.sql.4=$(style.number)
	style.sql.5=$(style.keyword)
	style.sql.6=$(style.string)
	style.sql.7=$(style.string)
	style.sql.8=$(style.preproc)
	style.sql.9=eolfilled
	style.sql.10=$(style.operator)
	style.sql.11=
	style.sql.12=eolfilled
	style.sql.13=$(style.comment)
	style.sql.15=$(style.comment)
	style.sql.16=
	style.sql.17=
	style.sql.18=
	style.sql.19=
	style.sql.20=
	style.sql.21=
	style.sql.22=

	# xml
	style.xml.0=
	style.xml.1=$(style.tag)
	style.xml.2=$(style.function)
	style.xml.3=$(style.attribute)
	style.xml.4=$(style.identifier)
	style.xml.5=$(style.number)
	style.xml.6=$(style.string)
	style.xml.7=$(style.string)
	style.xml.8=
	style.xml.9=$(style.comment)
	style.xml.10=$(style.float)
	style.xml.11=$(style.tag)
	style.xml.12=$(style.comment)
	style.xml.13=$(style.comment)
	style.xml.17=$(style.float),eolfilled
	style.xml.18=$(style.identifier)
	style.xml.19=$(style.number)
	style.xml.21=$(style.float)
	style.xml.22=$(style.float)
	style.xml.23=$(style.function)
	style.xml.24=$(style.string)
	style.xml.25=$(style.string)
	style.xml.26=$(style.error)
	style.xml.27=
	style.xml.28=$(style.macro)
	style.xml.29=$(style.comment)
	style.xml.31=$(style.special)
	braces.xml.style=31

	#
	# markdown
	#
	style.markdown.32=

	# special
	style.markdown.1=fore:#33ff00

	# **strong**
	style.markdown.2=bold

	#  __strong__
	style.markdown.3=bold

	# *emphasis*
	style.markdown.4=italics

	# _emphasis_
	style.markdown.5=italics

	# headings
	style.markdown.6=fore:#cf6a4c,bold
	style.markdown.7=fore:#e9c062,bold
	style.markdown.8=fore:#cda869,bold
	style.markdown.9=fore:#8f9d6a,bold
	style.markdown.10=fore:#7587a6,bold
	style.markdown.11=fore:#9b859d,bold

	# prechar
	style.markdown.12=

	# bullets list
	style.markdown.13=fore:#4f94cd

	# numbered items
	style.markdown.14=fore:#4f94cd

	# blockquote
	style.markdown.15=fore:#9b703f

	# ~~strikeout~~
	style.markdown.16=

	# hrule
	style.markdown.17=fore:#f9ee98

	# link
	style.markdown.18=fore:#cf6a4c

	# `code`
	style.markdown.19=fore:#a6a6a6

	# code-2
	style.markdown.20=fore:#33ff00

	# code block
	style.markdown.21=fore:#a6a6a6

	# comment
	style.markdown.22=fore:#33ff00

	# option
	style.markdown.23=fore:#33ff00

	# preproc
	style.markdown.24=fore:#33ff00

	# postproc
	style.markdown.25=fore:#33ff00
